package step_3_1

import scala.math._

/*
Ваша задача - рассчитать плотность вероятности ﻿нормального распределения по заданным математическому ожиданию μ,
среднеквадратичному отклонению σ и значению случайной величины ﻿x по формуле: p=(1/σ)√(2⋅π)⋅e^((−(x−μ)^2)/(2⋅σ^2))
Реализуйте метод:

def normalDistribution(mu: Double, sigma: Double, x: Double): Double = {
  ...
}

Замечание: в Scala ﻿значение, возвращаемое функцией - просто последнее выражение, записанное в функции.
Например в функции

﻿def ﻿toSquare(i: Int): Int = {﻿
  val ﻿res = i*i
  res
}

последним выражением является `res`, его значение и будет возвращено из функции.
Ничего считывать и выводить в консоль не нужно. Просто реализуйте метод.﻿
P.S. математические константы лучше брать из scala.math
*/

object Main extends App {
  def normalDistribution(mu: Double, sigma: Double, x: Double): Double = {
    val e = exp(-(x - mu) * (x - mu) / (2.0 * sigma * sigma))
    1.0 / (sigma * sqrt(2.0 * Pi))
  }
}
