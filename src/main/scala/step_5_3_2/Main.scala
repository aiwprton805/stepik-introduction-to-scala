package step_5_3_2

/*
В магазине красок проводится акция: на банки краски объемом от 5 до 10 литров скидка 5%, на банки больше 10 литров -
10%.
Одна банка представлена кейс классом Jar(name: String, value: Int, price: Double), где name - артикул, value - объем,
price - цена в рублях.
Напишите частичную функцию discount, которая при подстановке в метод collect списка банок, превратит его в список строк.
Каждая строка должна состоять из артикула и размера скидки в рублях, записанных через пробел. В список должны входить
только товары с ненулевой скидкой.
Пример использования функции:

case class Jar(name: String, value: Int, price: Double)
val jars = List(Jar("Морской синий 6л", 6, 3000), Jar("Огненно-красный 12л", 12, 5000))
jars.collect(discount)

Ничего считывать и выводить в консоль не нужно. Просто реализуйте функцию.﻿
Начальный список:

List(
Jar("Морской синий 6л", 6, 3000.0),
Jar("Огненно-красный 12л", 12, 5000.0),
Jar("Зеленый 1л", 1, 500.0)
)

После применения функции:

List(
"Морской синий 6л 150.0",
"Огненно-красный 12л 500.0"
)

Sample Input:
Морской синий 6л, 6, 3000.0
Огненно-красный 12л, 12, 5000.0
Зеленый 1л, 1, 500.0

Sample Output:
Морской синий 6л 150.0
Огненно-красный 12л 500.0
*/

object Main extends App {
  case class Jar(name: String, value: Int, prise: Double)

  def discount: PartialFunction[Jar, String] = {
    case Jar(name, value, prise) if value >= 5 && value <= 10 => name + " " + (prise * 0.05)
    case Jar(name, value, prise) if value > 10 => name + " " + (prise * 0.1)
  }
}
